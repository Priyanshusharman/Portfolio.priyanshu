'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var Bookmark = function (_React$Component) {
  _inherits(Bookmark, _React$Component);

  function Bookmark(props) {
    _classCallCheck(this, Bookmark);

    var _this = _possibleConstructorReturn(this, (Bookmark.__proto__ || Object.getPrototypeOf(Bookmark)).call(this, props));

    _this.clickHandler = _this.clickHandler.bind(_this);
    return _this;
  }

  _createClass(Bookmark, [{
    key: 'clickHandler',
    value: function clickHandler() {
      this.props.onSelect && this.props.onSelect(this.props.progress);
    }
  }, {
    key: 'render',
    value: function render() {
      var style = {
        top: this.context.height * (this.props.progress / 100) + 'px'
      };
      var cls = ['timeline-bookmark', this.props.progress <= this.context.progress ? 'visited' : null].join(' ');

      return _react2.default.createElement(
        'div',
        { className: cls, onClick: this.clickHandler, style: style },
        _react2.default.createElement(
          'div',
          null,
          this.props.children
        )
      );
    }
  }]);

  return Bookmark;
}(_react2.default.Component);

exports.default = Bookmark;


Bookmark.contextTypes = {
  height: _propTypes2.default.number.isRequired,
  progress: _propTypes2.default.number,
  onSelect: function onSelect() {}
};

Bookmark.defaultProps = {
  onSelect: function onSelect() {},
  children: []
};

Bookmark.propTypes = process.env.NODE_ENV !== "production" ? {
  children: _propTypes2.default.node,
  onSelect: _propTypes2.default.func,
  progress: _propTypes2.default.number.isRequired
} : {};